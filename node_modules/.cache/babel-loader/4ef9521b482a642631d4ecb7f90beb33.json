{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\Bureau\\\\material-dashboard-react-main\\\\src\\\\components\\\\MDTypography\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Custom styles for MDTypography\n\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\"; // Material Dashboard 2 React contexts\n\nimport { useMaterialUIController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MDTypography = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    color,\n    fontWeight,\n    textTransform,\n    verticalAlign,\n    textGradient,\n    opacity,\n    children,\n    ...rest\n  } = _ref;\n  const [controller] = useMaterialUIController();\n  const {\n    darkMode\n  } = controller;\n  return /*#__PURE__*/_jsxDEV(MDTypographyRoot, { ...rest,\n    ref: ref,\n    ownerState: {\n      color,\n      textTransform,\n      verticalAlign,\n      fontWeight,\n      opacity,\n      textGradient,\n      darkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}, \"s0n8bwZXGOuz7un3Pl1FvVzqqsQ=\", false, function () {\n  return [useMaterialUIController];\n})), \"s0n8bwZXGOuz7un3Pl1FvVzqqsQ=\", false, function () {\n  return [useMaterialUIController];\n}); // Setting default values for the props of MDTypography\n\n\n_c2 = MDTypography;\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1\n}; // Typechecking props for the MDTypography\n\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\"inherit\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"white\"]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\"unset\", \"baseline\", \"sub\", \"super\", \"text-top\", \"text-bottom\", \"middle\", \"top\", \"bottom\"]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number\n};\nexport default MDTypography;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDTypography$forwardRef\");\n$RefreshReg$(_c2, \"MDTypography\");","map":{"version":3,"names":["forwardRef","PropTypes","MDTypographyRoot","useMaterialUIController","MDTypography","ref","color","fontWeight","textTransform","verticalAlign","textGradient","opacity","children","rest","controller","darkMode","defaultProps","propTypes","oneOf","bool","node","isRequired","number"],"sources":["C:/Users/thoma/OneDrive/Bureau/material-dashboard-react-main/src/components/MDTypography/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { forwardRef } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Custom styles for MDTypography\r\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\";\r\n\r\n// Material Dashboard 2 React contexts\r\nimport { useMaterialUIController } from \"context\";\r\n\r\nconst MDTypography = forwardRef(\r\n  (\r\n    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },\r\n    ref\r\n  ) => {\r\n    const [controller] = useMaterialUIController();\r\n    const { darkMode } = controller;\r\n\r\n    return (\r\n      <MDTypographyRoot\r\n        {...rest}\r\n        ref={ref}\r\n        ownerState={{\r\n          color,\r\n          textTransform,\r\n          verticalAlign,\r\n          fontWeight,\r\n          opacity,\r\n          textGradient,\r\n          darkMode,\r\n        }}\r\n      >\r\n        {children}\r\n      </MDTypographyRoot>\r\n    );\r\n  }\r\n);\r\n\r\n// Setting default values for the props of MDTypography\r\nMDTypography.defaultProps = {\r\n  color: \"dark\",\r\n  fontWeight: false,\r\n  textTransform: \"none\",\r\n  verticalAlign: \"unset\",\r\n  textGradient: false,\r\n  opacity: 1,\r\n};\r\n\r\n// Typechecking props for the MDTypography\r\nMDTypography.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"inherit\",\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"light\",\r\n    \"dark\",\r\n    \"text\",\r\n    \"white\",\r\n  ]),\r\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\r\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\r\n  verticalAlign: PropTypes.oneOf([\r\n    \"unset\",\r\n    \"baseline\",\r\n    \"sub\",\r\n    \"super\",\r\n    \"text-top\",\r\n    \"text-bottom\",\r\n    \"middle\",\r\n    \"top\",\r\n    \"bottom\",\r\n  ]),\r\n  textGradient: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n  opacity: PropTypes.number,\r\n};\r\n\r\nexport default MDTypography;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,0CAA7B,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,SAAxC;;;AAEA,MAAMC,YAAY,iCAAGJ,UAAU,SAC7B,OAEEK,GAFF,KAGK;EAAA;;EAAA,IAFH;IAAEC,KAAF;IAASC,UAAT;IAAqBC,aAArB;IAAoCC,aAApC;IAAmDC,YAAnD;IAAiEC,OAAjE;IAA0EC,QAA1E;IAAoF,GAAGC;EAAvF,CAEG;EACH,MAAM,CAACC,UAAD,IAAeX,uBAAuB,EAA5C;EACA,MAAM;IAAEY;EAAF,IAAeD,UAArB;EAEA,oBACE,QAAC,gBAAD,OACMD,IADN;IAEE,GAAG,EAAER,GAFP;IAGE,UAAU,EAAE;MACVC,KADU;MAEVE,aAFU;MAGVC,aAHU;MAIVF,UAJU;MAKVI,OALU;MAMVD,YANU;MAOVK;IAPU,CAHd;IAAA,UAaGH;EAbH;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAzB4B;EAAA,QAKNT,uBALM;AAAA,GAAb;EAAA,QAKOA,uBALP;AAAA,EAAlB,C,CA4BA;;;MA5BMC,Y;AA6BNA,YAAY,CAACY,YAAb,GAA4B;EAC1BV,KAAK,EAAE,MADmB;EAE1BC,UAAU,EAAE,KAFc;EAG1BC,aAAa,EAAE,MAHW;EAI1BC,aAAa,EAAE,OAJW;EAK1BC,YAAY,EAAE,KALY;EAM1BC,OAAO,EAAE;AANiB,CAA5B,C,CASA;;AACAP,YAAY,CAACa,SAAb,GAAyB;EACvBX,KAAK,EAAEL,SAAS,CAACiB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,WAHqB,EAIrB,MAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,OAPqB,EAQrB,OARqB,EASrB,MATqB,EAUrB,MAVqB,EAWrB,OAXqB,CAAhB,CADgB;EAcvBX,UAAU,EAAEN,SAAS,CAACiB,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,QAA5B,EAAsC,MAAtC,CAAhB,CAdW;EAevBV,aAAa,EAAEP,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,YAAT,EAAuB,WAAvB,EAAoC,WAApC,CAAhB,CAfQ;EAgBvBT,aAAa,EAAER,SAAS,CAACiB,KAAV,CAAgB,CAC7B,OAD6B,EAE7B,UAF6B,EAG7B,KAH6B,EAI7B,OAJ6B,EAK7B,UAL6B,EAM7B,aAN6B,EAO7B,QAP6B,EAQ7B,KAR6B,EAS7B,QAT6B,CAAhB,CAhBQ;EA2BvBR,YAAY,EAAET,SAAS,CAACkB,IA3BD;EA4BvBP,QAAQ,EAAEX,SAAS,CAACmB,IAAV,CAAeC,UA5BF;EA6BvBV,OAAO,EAAEV,SAAS,CAACqB;AA7BI,CAAzB;AAgCA,eAAelB,YAAf"},"metadata":{},"sourceType":"module"}